<?xml version="1.0"?>
<project name="clockwork" default="dist" basedir=".">
  <description>Build file for Clockwork SMS Java wrapper</description>
  <!-- set global properties for this build -->
  <property name="src" location="src/main/java"/>
  <property name="test" location="src/test/java"/>
  <property name="build" location="build"/>
  <property name="lib" location="lib"/>
  <property name="javadoc" location="javadoc"/>
  <property name="dist" location="dist"/>
  <property name="reports" location="reports"/>
  <property name="project.name" value="clockwork"/>
  <property name="version.num" value="1.2.0"/>
  <tstamp>
    <format property="TODAY" pattern="yyyy-MM-dd HH:mm:ss"/>
  </tstamp>
  <!-- Define the classpath which includes the junit.jar and the classes after compiling-->
  <path id="junit.class.path">
    <pathelement location="lib/junit-4.8.1.jar"/>
    <fileset dir="${lib}" includes="*.jar"/>
    <pathelement location="${build}"/>
  </path>
  <target name="init">
    <!-- Create directory structures -->
    <mkdir dir="${build}"/>
    <mkdir dir="${javadoc}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="${reports}"/>
    <mkdir dir="${reports}/raw/"/>
    <mkdir dir="${reports}/html/"/>
  </target>
  <target name="compile" depends="init" description="compile the source ">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" includeantruntime="false">
      <classpath refid="junit.class.path"/>
    </javac>
    <javac srcdir="${test}" destdir="${build}" includeantruntime="false">
      <classpath refid="junit.class.path"/>
    </javac>
  </target>
  <target name="run-tests" depends="compile" description="run your test suite">
    <junit printsummary="yes" haltonfailure="yes" showoutput="yes">
      <classpath refid="junit.class.path"/>
      <batchtest fork="yes" todir="${reports}/raw/">
        <formatter type="xml"/>
        <fileset dir="${test}">
          <include name="**/*Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>
  <target name="test" depends="run-tests">
    <junitreport todir="${reports}">
      <fileset dir="${reports}/raw/">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="${reports}\html\"/>
    </junitreport>
  </target>
  <target name="jar" depends="compile">
    <mkdir dir="${dist}"/>
    <manifest file="${build}/MANIFEST.MF">
      <attribute name="Built-By" value="clockworksms.com"/>
      <attribute name="Main-Class" value="com.clockworksms.CommandLineClient"/>
      <attribute name="Implementation-Version" value="${version.num}"/>
      <attribute name="Built-Date" value="${TODAY}"/>
    </manifest>
    <jar destfile="${dist}/${project.name}-${version.num}.jar" basedir="${build}" includes="**/*.class" excludes="**/*Test*.class" manifest="${build}/MANIFEST.MF"/>
  </target>
  <target name="javadoc">
    <javadoc access="public" destdir="${javadoc}" author="true" version="true" use="true" windowtitle="Clockwork SMS Java Wrapper API">
      <fileset dir="${src}" defaultexcludes="yes">
        <include name="**/*.java"/>
      </fileset>
    </javadoc>
  </target>
  <target name="dist" depends="clean, compile, jar" description="generate the distribution"/>
  <target name="clean" description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
  <target name="run" depends="dist">
    <java jar="dist/${project.name}-${version.num}.jar" fork="true"/>
  </target>
</project>
